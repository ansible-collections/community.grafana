---
- name: Create test user (default org 1)
  community.grafana.grafana_user:
    url: "{{ grafana_url }}"
    url_username: "{{ grafana_username }}"
    url_password: "{{ grafana_password }}"
    name: orgtest
    email: orgtest@example.com
    login: orgtest
    password: userpassword
    state: present
  register: result

- name: Remove user from organization (default org 1)
  community.grafana.grafana_organization_user:
    url: "{{ grafana_url }}"
    url_username: "{{ grafana_username }}"
    url_password: "{{ grafana_password }}"
    login: orgtest
    state: absent
  register: result
- ansible.builtin.assert:
    that:
      - result.failed == false
      - result.changed == true
  when: not ansible_check_mode

- name: Check idempotency on user removal from org
  community.grafana.grafana_organization_user:
    url: "{{ grafana_url }}"
    url_username: "{{ grafana_username }}"
    url_password: "{{ grafana_password }}"
    login: orgtest
    state: absent
  register: result
- ansible.builtin.assert:
    that:
      - result.failed == false
      - result.changed == false
  when: not ansible_check_mode

- name: Add user to organization
  community.grafana.grafana_organization_user:
    url: "{{ grafana_url }}"
    url_username: "{{ grafana_username }}"
    url_password: "{{ grafana_password }}"
    login: orgtest
    role: viewer
    state: present
  register: result
- ansible.builtin.assert:
    that:
      - result.failed == false
      - result.changed == true
      - result.user.orgId == 1
      - result.user.role == 'Viewer'
  when: not ansible_check_mode

- name: Update existing user role
  community.grafana.grafana_organization_user:
    url: "{{ grafana_url }}"
    url_username: "{{ grafana_username }}"
    url_password: "{{ grafana_password }}"
    login: orgtest
    role: editor
    state: present
  register: result
- ansible.builtin.assert:
    that:
      - result.failed == false
      - result.changed == true
      - result.user.orgId == 1
      - result.user.role == 'Editor'
  when: not ansible_check_mode

- name: Check idempotency on user update
  community.grafana.grafana_organization_user:
    url: "{{ grafana_url }}"
    url_username: "{{ grafana_username }}"
    url_password: "{{ grafana_password }}"
    login: orgtest
    role: editor
    state: present
  register: result
- ansible.builtin.assert:
    that:
      - result.failed == false
      - result.changed == false
  when: not ansible_check_mode

- name: Create a new organization
  community.grafana.grafana_organization:
    url: "{{ grafana_url }}"
    url_username: "{{ grafana_username }}"
    url_password: "{{ grafana_password }}"
    name: neworgtest
    state: present
  register: org

- name: Add user to the new organization by org_id
  community.grafana.grafana_organization_user:
    url: "{{ grafana_url }}"
    url_username: "{{ grafana_username }}"
    url_password: "{{ grafana_password }}"
    org_id: "{{ org.org.id }}"
    login: orgtest
    role: admin
    state: present
  register: result
  when: not ansible_check_mode

- ansible.builtin.assert:
    that:
      - result.failed == false
      - result.changed == true
      - result.user.orgId == org.org.id
      - result.user.role == 'Admin'
  when: not ansible_check_mode

- name: Remove user from new organization by org_id
  community.grafana.grafana_organization_user:
    url: "{{ grafana_url }}"
    url_username: "{{ grafana_username }}"
    url_password: "{{ grafana_password }}"
    org_id: "{{ org.org.id }}"
    login: orgtest
    state: absent
  register: result
  when: not ansible_check_mode

- ansible.builtin.assert:
    that:
      - result.failed == false
      - result.changed == true
  when: not ansible_check_mode

- name: Add user to the new organization by org_name
  community.grafana.grafana_organization_user:
    url: "{{ grafana_url }}"
    url_username: "{{ grafana_username }}"
    url_password: "{{ grafana_password }}"
    org_name: "{{ org.org.name }}"
    login: orgtest
    role: admin
    state: present
  register: result
  when: not ansible_check_mode

- ansible.builtin.assert:
    that:
      - result.failed == false
      - result.changed == true
      - result.user.orgId == org.org.id
      - result.user.role == 'Admin'
  when: not ansible_check_mode

- name: Remove user from new organization by org_name
  community.grafana.grafana_organization_user:
    url: "{{ grafana_url }}"
    url_username: "{{ grafana_username }}"
    url_password: "{{ grafana_password }}"
    org_name: "{{ org.org.name }}"
    login: orgtest
    state: absent
  register: result
  when: not ansible_check_mode

- ansible.builtin.assert:
    that:
      - result.failed == false
      - result.changed == true
  when: not ansible_check_mode
