name: CI
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  sanity:
    runs-on: ubuntu-latest
    name: Sanity (Ⓐ$${{ matrix.ansible_version }})
    timeout-minutes: 30
    strategy:
      matrix:
        python_version: ["3.10"]
        ansible_version: ["stable-2.15", "stable-2.16", "devel"]
    steps:
      - name: Perform testing
        uses: ansible-community/ansible-test-gh-action@release/v1
        with:
          ansible-core-version: ${{ matrix.ansible_version }}
          origin-python-version: ${{ matrix.python_version }}
          target-python-version: ${{ matrix.python_version }}
          testing-type: sanity

  units:
    runs-on: ubuntu-latest
    name: Units (Ⓐ$${{ matrix.ansible_version }})
    timeout-minutes: 30
    strategy:
      matrix:
        python_version: ["3.10"]
        ansible_version: ["stable-2.15", "stable-2.16", "devel"]
    steps:
      - name: Perform testing
        uses: ansible-community/ansible-test-gh-action@release/v1
        with:
          ansible-core-version: ${{ matrix.ansible_version }}
          origin-python-version: ${{ matrix.python_version }}
          target-python-version: ${{ matrix.python_version }}
          testing-type: units

  integration:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        grafana_version: ["9.5.14", "8.5.27", "10.2.2"]
        ansible_version: ["stable-2.15", "stable-2.16", "devel"]
        python_version: ["3.10"]
    services:
      grafana:
        image: grafana/grafana:${{ matrix.grafana_version }}
    steps:
      - name: Perform testing
        uses: ansible-community/ansible-test-gh-action@release/v1
        with:
          ansible-core-version: ${{ matrix.ansible_version }}
          target-python-version: ${{ matrix.python_version }}
          testing-type: integration

  molecule:
    runs-on: ubuntu-latest
    env:
      PY_COLORS: 1
      ANSIBLE_FORCE_COLOR: 1
    strategy:
      fail-fast: false
      matrix:
        grafana_version: ["9.5.14", "8.5.27", "10.2.2"]
        ansible_version: ["stable-2.15", "stable-2.16", "devel"]
        python_version: ["3.10"]
    services:
      grafana:
        image: grafana/grafana:${{ matrix.grafana_version }}
        ports: ["3000:3000"]
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}

      - name: Install dependencies
        run: |
          python -m pip install --no-cache-dir --upgrade pip
          pip install "git+https://github.com/ansible/ansible@${{ matrix.ansible_version }}" molecule molecule-docker

      - name: Test with molecule
        run: |
          molecule --version
          molecule test
