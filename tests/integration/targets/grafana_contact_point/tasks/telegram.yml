---
- name: Create telegram contact point
  register: result
  community.grafana.grafana_contact_point:
    uid: telegram
    name: telegram
    type: telegram
    telegram_token: xxx
    telegram_chat_id: yyy

- ansible.builtin.debug:
    var: result

- ansible.builtin.assert:
    that:
      - result.changed
      - result.state == "present"
      - result.contact_point.uid == "telegram"
      - result.contact_point.name == "telegram"
      - result.contact_point.type == "telegram"

- name: Create telegram contact point
  register: result
  community.grafana.grafana_contact_point:
    uid: telegram
    name: telegram
    type: telegram
    telegram_token: xxx
    telegram_chat_id: yyy

- ansible.builtin.debug:
    var: result

- ansible.builtin.assert:
    that:
      - not result.changed
      - result.state == "present"
      - result.contact_point.uid == "telegram"
      - result.contact_point.name == "telegram"
      - result.contact_point.type == "telegram"

- name: Update telegram contact point
  register: result
  community.grafana.grafana_contact_point:
    uid: telegram
    name: telegram
    type: telegram
    telegram_token: xxx-update
    telegram_chat_id: yyy-update

- ansible.builtin.debug:
    var: result

- ansible.builtin.assert:
    that:
      - result.changed
      - result.state == "present"
      - result.contact_point.uid == "telegram"
      - result.contact_point.name == "telegram"
      - result.contact_point.type == "telegram"
      - result.diff is defined

- name: Delete telegram contact point
  register: result
  community.grafana.grafana_contact_point:
    uid: telegram
    state: absent

- ansible.builtin.debug:
    var: result

- ansible.builtin.assert:
    that:
      - result.changed
      - result.state == "absent"
      - result.contact_point.uid == "telegram"

- name: Delete telegram contact point (idempotency)
  register: result
  community.grafana.grafana_contact_point:
    uid: telegram
    state: absent

- ansible.builtin.debug:
    var: result

- ansible.builtin.assert:
    that:
      - not result.changed
      - result.state == "absent"
