---
- name: Create a Grafana organization
  community.grafana.grafana_organization:
    url: "{{ grafana_url }}"
    url_username: "{{ grafana_username }}"
    url_password: "{{ grafana_password }}"
    name: orgtest
    state: present
  register: result

- ansible.builtin.assert:
    that:
      - result.changed == true
      - result.failed == false
      - result.org.name == 'orgtest'
  when: not ansible_check_mode

- name: Check idempotency Grafana organization
  community.grafana.grafana_organization:
    url: "{{ grafana_url }}"
    url_username: "{{ grafana_username }}"
    url_password: "{{ grafana_password }}"
    name: orgtest
    state: present
  register: result

- ansible.builtin.assert:
    that:
      - result.changed == false
      - result.failed == false
      - result.org.name == 'orgtest'
  when: not ansible_check_mode

- name: Delete a Grafana organization
  community.grafana.grafana_organization:
    url: "{{ grafana_url }}"
    url_username: "{{ grafana_username }}"
    url_password: "{{ grafana_password }}"
    name: orgtest
    state: absent
  register: result

- ansible.builtin.assert:
    that:
      - result.changed == true
      - result.failed == false
      - result.msg |length > 0
  when: not ansible_check_mode

- name: Check idempotency delete a Grafana organization
  community.grafana.grafana_organization:
    url: "{{ grafana_url }}"
    url_username: "{{ grafana_username }}"
    url_password: "{{ grafana_password }}"
    name: orgtest
    state: absent
  register: result

- ansible.builtin.assert:
    that:
      - result.changed == false
      - result.failed == false
      - result.msg == 'No org found, nothing to do'
  when: not ansible_check_mode
